begin model

begin parameters
    RhoSOS 1 #nM # initial concentration of SOS 
    Kon1 7e-8 * RhoSOS  #sos binding to RasGDP 
    Kon2 7e-8 * RhoSOS  #sos binding to RasGTP 
    Koff1 5e-3 #5e-3 #sos dissociating from RasGDP #koff1
    Koff2 5e-4  #sos dissociating from RasGTP #koff2
    Kcat1 1e-2 / A #RasGDP to RasGTP # phosphorylation rate 
    Kcat2 2.5e-3  #RasGTP to RasGDP # dephosphorylation rate   
    A 1 # corral area um^2
    Ras0 1000 * A # (#/um^2) * A for # of molecules, total # of Ras 
end parameters

begin molecule types
    Ras(lig~0~SOS,a~p~0)
end molecule types

begin species
   Ras(lig~0,a~0) Ras0 #initial # of unbound RasGDP molecules
end species

begin observables
    Molecules boundRasGTP Ras(lig~SOS,a~p)
    Molecules boundRasGDP Ras(lig~SOS,a~0)
    Molecules totalBoundRas Ras(lig~SOS)
    Molecules unboundRasGTP Ras(lig~0,a~p)
    Molecules unboundRasGDP Ras(lig~0,a~0)
    Molecules totalRasGTP Ras(a~p)
    Molecules TotalRas Ras()
end observables

begin functions 
    activatedRasGTP() totalRasGTP/TotalRas
end functions

begin reaction rules
    RasDephos: Ras(lig~0,a~p) -> Ras(lig~0,a~0) Kcat2                                    
    RasPhos: Ras(lig~0,a~0) + Ras(lig~SOS) -> Ras(lig~0,a~p) + Ras(lig~SOS) Kcat1

    SosGDPbinding: Ras(lig~0,a~0) <-> Ras(lig~SOS,a~0) Kon1,Koff1
    SosGTPbinding: Ras(lig~0,a~p) <-> Ras(lig~SOS,a~p) Kon2,Koff2
end reaction rules

end model

#bifurcate({method=>"ode",parameter=>"RhoSOS",par_min=>1,par_max=>10,\
          #      n_scan_pts=>100,t_end=>10000,n_steps=>2})


simulate({method=>"ssa", t_end=>100000, n_steps=>100000, print_functions=>1})






